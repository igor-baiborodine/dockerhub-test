name: Perform Release
on:
  workflow_dispatch:
    inputs:
      releaseVersion:
        description: Release Version
        required: true

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/dockerhub-test
  IMAGE_TAG:  ${{ github.event.inputs.releaseVersion }}

jobs:
#  dockerfile:
#    name: Dockerfile
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Configure Git user
#        run: |
#          git config user.email "actions@github.com"
#          git config user.name "GitHub Actions"
#
#      - name: Release Dockerfile
#        run: |
#          ./script/release-dockerfile.sh -t "$IMAGE_TAG"
#
#      - name: Tag release
#        uses: tvdias/github-tagger@v0.0.1
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#          tag: ${{ github.event.inputs.releaseVersion }}
#
#      - name: Echo tag commit hash
#        run: |
#          echo "$IMAGE_TAG"
#          echo "$(git show --pretty=format:'%H' --quiet $IMAGE_TAG)"

  docker_image:
    name: Docker Image
    runs-on: ubuntu-latest
#    needs: [ dockerfile ]

    steps:
      - name: Check out project
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.releaseVersion }}

      - name: Check out docker-library/official-images
        run: |
          git clone https://github.com/docker-library/official-images.git ./official-images

      - name: Configure Git user
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Build image
        run: |
          docker build . --file Dockerfile --tag $IMAGE_NAME:"${IMAGE_TAG//\//-}"
          ./official-images/test/run.sh $IMAGE_NAME:"${IMAGE_TAG//\//-}"
          docker tag $IMAGE_NAME:"${IMAGE_TAG//\//-}" $IMAGE_NAME:latest

      - name: Log into registry
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push image
        run: |
          docker push $IMAGE_NAME:"${IMAGE_TAG//\//-}"
          docker push $IMAGE_NAME:latest

      - name: Update README
        run: |
          ./script/generate-readme.sh -t "$IMAGE_TAG" -c "$(git show --pretty=format:'%H' --quiet $IMAGE_TAG)"
          git add ./README.md ./supported-tags
          git commit -m "Add new supported tag [$IMAGE_TAG]"
          git push
